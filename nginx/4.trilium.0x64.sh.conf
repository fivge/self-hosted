# This part is for proxy and HTTPS configure
server {
    listen 443 ssl;
    server_name trilium.0x64.sh;

    ssl_certificate /home/lux/.acme.sh/trilium.0x64.sh/trilium.0x64.sh.cer;
    ssl_certificate_key /home/lux/.acme.sh/trilium.0x64.sh/trilium.0x64.sh.key;
    ssl_trusted_certificate /home/lux/.acme.sh/trilium.0x64.sh/ca.cer;

    ssl_session_cache builtin:1000 shared:SSL:10m;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4;
    ssl_prefer_server_ciphers on;
    access_log /var/log/nginx/trilium.0x64.sh_access.log;

    location / {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://127.0.0.1:9001;
        proxy_read_timeout 90;
        proxy_redirect http://127.0.0.1:9001 https://trilium.0x64.sh;
    }
}
# This part is for HTTPS forced
server {
    listen 80;
    listen [::]:80;
    server_name trilium.0x64.sh;

    return 301 https://$host$request_uri;
}
