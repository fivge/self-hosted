server {
    listen 443 ssl http2;
    # listen                    443 http3;
    listen [::]:443 ssl http2;
    # listen                    [::]:443 http3;
    server_name 0x64.sh;
    root /var/www/0x64.sh;

    # SSL
    ssl_certificate /home/lux/.acme.sh/0x64.sh/0x64.sh.cer;
    ssl_certificate_key /home/lux/.acme.sh/0x64.sh/0x64.sh.key;
    ssl_trusted_certificate /home/lux/.acme.sh/0x64.sh/ca.cer; ## new

    # Mozilla Guideline v5.6
    ssl_session_timeout 1d;
    ssl_session_cache shared:MozSSL:10m; # about 40000 sessions
    ssl_session_tickets off;

    # modern configuration
    ssl_protocols TLSv1.3;
    ssl_prefer_server_ciphers off;
    # HSTS (ngx_http_headers_module is required) (63072000 seconds)
    # add_header Strict-Transport-Security "max-age=63072000" always;

    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;

    # verify chain of trust of OCSP response using Root CA and Intermediate certs
    # ssl_trusted_certificate /path/to/root_CA_cert_plus_intermediates;

    # replace with the IP address of your resolver
    # resolver 127.0.0.1;
    #
    ## Onion services
    # add_header Onion-Location http://0x64.onion$request_uri;
    #
    # security
    # include                   nginxconfig.io/security.conf;
    # security headers
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: ws: wss: data: blob: 'unsafe-inline'; frame-ancestors 'self';" always;
    add_header Permissions-Policy "interest-cohort=()" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # . files
    location ~ /\.(?!well-known) {
        deny all;
    }

    # logging
    access_log /var/log/nginx/0x64.sh.access.log;
    error_log /var/log/nginx/0x64.sh.error.log warn;

    # # index.html fallback
    # location / {
    #     try_files $uri $uri/ /index.html;
    # }

    # # index.php fallback
    # location ~ ^/api/ {
    #     try_files $uri $uri/ /index.php?$query_string;
    # }
    # # reverse proxy
    # location /fooo {
    #     proxy_pass http://127.0.0.1:3000;
    #     include    nginxconfig.io/proxy.conf;
    # }
    # additional config
    # include nginxconfig.io/general.conf;
    # favicon.ico
    location = /favicon.ico {
        log_not_found off;
        access_log off;
    }

    # robots.txt
    location = /robots.txt {
        log_not_found off;
        access_log off;
    }

    # assets, media
    location ~* \.(?:css(\.map)?|js(\.map)?|jpe?g|png|gif|ico|cur|heic|webp|tiff?|mp3|m4a|aac|ogg|midi?|wav|mp4|mov|webm|mpe?g|avi|ogv|flv|wmv)$ {
        expires 7d;
        access_log off;
    }

    # svg, fonts
    location ~* \.(?:svgz?|ttf|ttc|otf|eot|woff2?)$ {
        add_header Access-Control-Allow-Origin "*";
        expires 7d;
        access_log off;
    }

    # gzip
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml application/json application/javascript application/rss+xml application/atom+xml image/svg+xml;

    # brotli
    brotli on;
    brotli_comp_level 6;
    brotli_types text/plain text/css text/xml application/json application/javascript application/rss+xml application/atom+xml image/svg+xml;
}

# HTTP redirect
server {
    listen 80;
    listen [::]:80;
    server_name 0x64.sh;

    return 301 https://$host$request_uri;
}